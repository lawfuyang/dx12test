
#include <graphic/pch.h>

#include <system/imguimanager.h>

#include <tmp/shaders/autogen/cpp/ShaderInputs/NBodyGravityCSConsts.h>
#include <tmp/shaders/autogen/cpp/ShaderInputs/NBodyGravityVSPSConsts.h>
#include <tmp/shaders/autogen/cpp/ShaderPermutations/NBodyGravity.h>

static bool gs_DoBodyGravityParticles = false;

class GfxBodyGravityParticlesUpdate : public GfxRendererBase
{
    void Initialize() override;
    void PopulateCommandList(GfxContext& context) override;
    bool ShouldPopulateCommandList(GfxContext&) const override { return gs_DoBodyGravityParticles; }
    const char* GetName() const override { return "GfxBodyGravityParticlesUpdate"; }

    void UpdateIMGUI();

    GfxRootSignature* m_RootSignature = nullptr;
};

void GfxBodyGravityParticlesUpdate::Initialize()
{
    g_IMGUIManager.RegisterTopMenu("Graphic", GetName(), &gs_DoBodyGravityParticles);
    g_IMGUIManager.RegisterWindowUpdateCB([&]() { UpdateIMGUI(); });

    // Perfomance TIP: Order from most frequent to least frequent.
    CD3DX12_DESCRIPTOR_RANGE1 ranges[2]{};
    ranges[0].Init(D3D12_DESCRIPTOR_RANGE_TYPE_SRV, AutoGenerated::NBodyGravityCSConsts::NbSRVs, 0, 0, D3D12_DESCRIPTOR_RANGE_FLAG_DESCRIPTORS_VOLATILE); // input particle PosVelo SRV
    ranges[1].Init(D3D12_DESCRIPTOR_RANGE_TYPE_UAV, AutoGenerated::NBodyGravityCSConsts::NbUAVs, 0, 0, D3D12_DESCRIPTOR_RANGE_FLAG_DATA_VOLATILE);        // output particle PosVelo UAV

    m_RootSignature = g_GfxRootSignatureManager.GetOrCreateRootSig(ranges, D3D12_ROOT_SIGNATURE_FLAG_NONE, "GfxBodyGravityParticlesUpdate_RootSignature");
}

void GfxBodyGravityParticlesUpdate::PopulateCommandList(GfxContext& context)
{
    bbeProfileFunction();
    bbeProfileGPUFunction(context);

    assert(m_RootSignature);
    context.SetRootSignature(*m_RootSignature);
}

void GfxBodyGravityParticlesUpdate::UpdateIMGUI()
{
    if (!gs_DoBodyGravityParticles)
        return;


}

class GfxBodyGravityParticlesRender : public GfxRendererBase
{
public:
    void Initialize() override;
    bool ShouldPopulateCommandList(GfxContext&) const override { return gs_DoBodyGravityParticles; }
    void PopulateCommandList(GfxContext& context) override;

    const char* GetName() const override { return "GfxBodyGravityParticlesRender"; }

    GfxRootSignature* m_RootSignature = nullptr;
};

void GfxBodyGravityParticlesRender::Initialize()
{
    // Perfomance TIP: Order from most frequent to least frequent.
    CD3DX12_DESCRIPTOR_RANGE1 ranges[1]{};
    ranges[0].Init(D3D12_DESCRIPTOR_RANGE_TYPE_SRV, AutoGenerated::NBodyGravityVSPSConsts::NbSRVs, 0, 0, D3D12_DESCRIPTOR_RANGE_FLAG_DESCRIPTORS_VOLATILE); // input particle PosVelo SRV

    m_RootSignature = g_GfxRootSignatureManager.GetOrCreateRootSig(ranges, D3D12_ROOT_SIGNATURE_FLAG_NONE, "GfxBodyGravityParticlesRender_RootSignature");
}

void GfxBodyGravityParticlesRender::PopulateCommandList(GfxContext& context)
{
    bbeProfileFunction();
    bbeProfileGPUFunction(context);

    assert(m_RootSignature);
    context.SetRootSignature(*m_RootSignature);
}

REGISTER_RENDERER(GfxBodyGravityParticlesUpdate);
REGISTER_RENDERER(GfxBodyGravityParticlesRender);
